{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jayde/OneDrive/Desktop/aura-backend/aura-frontend/app/BreathingExercise.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\n// Define the props the component will accept, including a function to close it\r\ninterface BreathingExerciseProps {\r\n  onClose: () => void;\r\n}\r\n\r\nexport default function BreathingExercise({ onClose }: BreathingExerciseProps) {\r\n  const [instruction, setInstruction] = useState(\"Get ready...\");\r\n  const [cycle, setCycle] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // A simple timer to cycle through breathing instructions\r\n    const instructions = [\"Inhale for 4s\", \"Hold for 7s\", \"Exhale for 8s\"];\r\n    const durations = [4000, 7000, 8000];\r\n\r\n    if (cycle >= 12) { // End after 4 full cycles\r\n      onClose();\r\n      return;\r\n    }\r\n\r\n    setInstruction(instructions[cycle % 3]);\r\n    const timer = setTimeout(() => {\r\n      setCycle(cycle + 1);\r\n    }, durations[cycle % 3]);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [cycle, onClose]);\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-blue-900 bg-opacity-90 flex flex-col items-center justify-center z-50 animate-fade-in\">\r\n      <div className=\"text-center\">\r\n        <div className=\"w-48 h-48 rounded-full border-4 border-white flex items-center justify-center transition-transform duration-1000\">\r\n          <p className=\"text-white text-3xl font-bold\">{instruction}</p>\r\n        </div>\r\n      </div>\r\n      <button onClick={onClose} className=\"absolute top-4 right-4 text-white text-2xl font-bold\">&times;</button>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AASe,SAAS,kBAAkB,EAAE,OAAO,EAA0B;IAC3E,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAC;IAC/C,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAC;IAEnC,IAAA,kNAAS,EAAC;QACR,yDAAyD;QACzD,MAAM,eAAe;YAAC;YAAiB;YAAe;SAAgB;QACtE,MAAM,YAAY;YAAC;YAAM;YAAM;SAAK;QAEpC,IAAI,SAAS,IAAI;YACf;YACA;QACF;QAEA,eAAe,YAAY,CAAC,QAAQ,EAAE;QACtC,MAAM,QAAQ,WAAW;YACvB,SAAS,QAAQ;QACnB,GAAG,SAAS,CAAC,QAAQ,EAAE;QAEvB,OAAO,IAAM,aAAa;IAC5B,GAAG;QAAC;QAAO;KAAQ;IAEnB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAE,WAAU;kCAAiC;;;;;;;;;;;;;;;;0BAGlD,8OAAC;gBAAO,SAAS;gBAAS,WAAU;0BAAuD;;;;;;;;;;;;AAGjG","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jayde/OneDrive/Desktop/aura-backend/aura-frontend/app/GoalTracker.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\n// Define the structure for a habit\r\ninterface Habit {\r\n  id: string;\r\n  name: string;\r\n  target: number;\r\n  progress: number;\r\n  emoji: string;\r\n}\r\n\r\n// Initial state for our habits\r\nconst initialHabits: Habit[] = [\r\n  { id: 'exercise', name: 'Exercise', target: 3, progress: 0, emoji: 'üí™' },\r\n  { id: 'mindful', name: 'Mindful Minutes', target: 5, progress: 0, emoji: 'üßò' },\r\n  { id: 'hydrate', name: 'Hydrate (8 glasses)', target: 7, progress: 0, emoji: 'üíß' },\r\n];\r\n\r\nexport default function GoalTracker() {\r\n  const [habits, setHabits] = useState<Habit[]>([]);\r\n\r\n  // On first load, get habits from localStorage or use initial state\r\n  useEffect(() => {\r\n    const savedHabits = localStorage.getItem('aura-habits');\r\n    if (savedHabits) {\r\n      setHabits(JSON.parse(savedHabits));\r\n    } else {\r\n      setHabits(initialHabits);\r\n    }\r\n  }, []);\r\n\r\n  // Whenever habits change, save them to localStorage\r\n  useEffect(() => {\r\n    if (habits.length > 0) {\r\n      localStorage.setItem('aura-habits', JSON.stringify(habits));\r\n    }\r\n  }, [habits]);\r\n\r\n  const handleProgress = (id: string) => {\r\n    setHabits(habits.map(habit => \r\n      (habit.id === id && habit.progress < habit.target)\r\n        ? { ...habit, progress: habit.progress + 1 }\r\n        : habit\r\n    ));\r\n  };\r\n  \r\n  const resetProgress = () => {\r\n    setHabits(initialHabits);\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-8 bg-white p-6 rounded-lg shadow-md\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800\">This Week's Goals</h2>\r\n        <button onClick={resetProgress} className=\"text-sm text-blue-500 hover:underline\">Reset</button>\r\n      </div>\r\n      <div className=\"space-y-4\">\r\n        {habits.map(habit => (\r\n          <div key={habit.id}>\r\n            <div className=\"flex justify-between items-center\">\r\n              <span className=\"font-semibold\">{habit.emoji} {habit.name}</span>\r\n              <span>{habit.progress} / {habit.target}</span>\r\n            </div>\r\n            <div className=\"w-full bg-gray-200 rounded-full h-2.5 mt-1\">\r\n              <div \r\n                className=\"bg-green-500 h-2.5 rounded-full\" \r\n                style={{ width: `${(habit.progress / habit.target) * 100}%` }}\r\n              ></div>\r\n            </div>\r\n            <button\r\n              onClick={() => handleProgress(habit.id)}\r\n              className=\"mt-2 text-sm bg-gray-200 px-3 py-1 rounded-full hover:bg-gray-300\"\r\n            >\r\n              Log +1\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAaA,+BAA+B;AAC/B,MAAM,gBAAyB;IAC7B;QAAE,IAAI;QAAY,MAAM;QAAY,QAAQ;QAAG,UAAU;QAAG,OAAO;IAAK;IACxE;QAAE,IAAI;QAAW,MAAM;QAAmB,QAAQ;QAAG,UAAU;QAAG,OAAO;IAAK;IAC9E;QAAE,IAAI;QAAW,MAAM;QAAuB,QAAQ;QAAG,UAAU;QAAG,OAAO;IAAK;CACnF;AAEc,SAAS;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iNAAQ,EAAU,EAAE;IAEhD,mEAAmE;IACnE,IAAA,kNAAS,EAAC;QACR,MAAM,cAAc,aAAa,OAAO,CAAC;QACzC,IAAI,aAAa;YACf,UAAU,KAAK,KAAK,CAAC;QACvB,OAAO;YACL,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,oDAAoD;IACpD,IAAA,kNAAS,EAAC;QACR,IAAI,OAAO,MAAM,GAAG,GAAG;YACrB,aAAa,OAAO,CAAC,eAAe,KAAK,SAAS,CAAC;QACrD;IACF,GAAG;QAAC;KAAO;IAEX,MAAM,iBAAiB,CAAC;QACtB,UAAU,OAAO,GAAG,CAAC,CAAA,QACnB,AAAC,MAAM,EAAE,KAAK,MAAM,MAAM,QAAQ,GAAG,MAAM,MAAM,GAC7C;gBAAE,GAAG,KAAK;gBAAE,UAAU,MAAM,QAAQ,GAAG;YAAE,IACzC;IAER;IAEA,MAAM,gBAAgB;QACpB,UAAU;IACZ;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,8OAAC;wBAAO,SAAS;wBAAe,WAAU;kCAAwC;;;;;;;;;;;;0BAEpF,8OAAC;gBAAI,WAAU;0BACZ,OAAO,GAAG,CAAC,CAAA,sBACV,8OAAC;;0CACC,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAK,WAAU;;4CAAiB,MAAM,KAAK;4CAAC;4CAAE,MAAM,IAAI;;;;;;;kDACzD,8OAAC;;4CAAM,MAAM,QAAQ;4CAAC;4CAAI,MAAM,MAAM;;;;;;;;;;;;;0CAExC,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCACC,WAAU;oCACV,OAAO;wCAAE,OAAO,GAAG,AAAC,MAAM,QAAQ,GAAG,MAAM,MAAM,GAAI,IAAI,CAAC,CAAC;oCAAC;;;;;;;;;;;0CAGhE,8OAAC;gCACC,SAAS,IAAM,eAAe,MAAM,EAAE;gCACtC,WAAU;0CACX;;;;;;;uBAdO,MAAM,EAAE;;;;;;;;;;;;;;;;AAsB5B","debugId":null}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jayde/OneDrive/Desktop/aura-backend/aura-frontend/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport BreathingExercise from './BreathingExercise'; // Assumes BreathingExercise.tsx is in the same folder\nimport GoalTracker from './GoalTracker'; // Assumes GoalTracker.tsx is in the same folder\n\n// --- Constants ---\nconst ALL_ACTIVITIES = [\"Exercise\", \"Social\", \"Work\", \"Hobby\", \"Rest\", \"Nutrition\"];\n\n// --- Type Definitions ---\ntype AnalysisResult = {\n  sentiment: 'POSITIVE' | 'NEGATIVE' | 'NEUTRAL' | string;\n  labels: string[];\n  activities: string[];\n};\n\n// --- Helper Components ---\nconst InsightCard = ({ primaryEmotion }: { primaryEmotion: string | null }) => {\n  let title = \"Your Personalized Insight ‚ú®\";\n  let text = \"We've analyzed your entry. Reflect on the tags above to better understand your feelings.\";\n  let emoji = \"üß†\";\n\n  switch (primaryEmotion) {\n    case 'Anxiety':\n      title = \"Feeling Anxious?\";\n      text = \"When you feel overwhelmed, try the 4-7-8 breathing technique. Inhale for 4s, hold for 7s, and exhale for 8s. It can calm your nervous system.\";\n      emoji = \"üå¨Ô∏è\";\n      break;\n    case 'Fatigue':\n      title = \"Feeling Fatigued?\";\n      text = \"Your energy seems low. Consider a short 10-minute walk outside. A little movement and fresh air can make a world of difference.\";\n      emoji = \"üö∂‚Äç‚ôÄÔ∏è\";\n      break;\n    case 'Sadness':\n      title = \"Feeling Sad?\";\n      text = \"It's okay to feel this way. Try writing down three small things you are grateful for today. This practice can gently shift your perspective.\";\n      emoji = \"‚ù§Ô∏è\";\n      break;\n  }\n\n  return (\n    <div className=\"mt-6 bg-blue-50 border border-blue-200 rounded-lg p-4\">\n      <h3 className=\"font-bold text-lg text-blue-800 flex items-center\">{emoji} {title}</h3>\n      <p className=\"text-blue-700 mt-2\">{text}</p>\n    </div>\n  );\n};\n\nconst CorrelationCard = ({ analysis }: { analysis: AnalysisResult }) => {\n  if (!analysis.activities || analysis.activities.length === 0) {\n    return null;\n  }\n  \n  let insightText = null;\n  if (analysis.sentiment === 'POSITIVE' && analysis.activities.includes('Exercise')) {\n    insightText = \"Great job on exercising! It seems to have a positive impact on your mood.\";\n  } else if (analysis.sentiment === 'POSITIVE' && analysis.activities.includes('Social')) {\n    insightText = \"Connecting with others is powerful. It looks like it boosted your spirits today!\";\n  } else if (analysis.labels.includes('Fatigue') && analysis.activities.includes('Work')) {\n    insightText = \"We noticed you logged 'Work' and are feeling fatigued. Remember to take regular breaks to recharge.\";\n  }\n\n  if (!insightText) return null;\n\n  return (\n    <div className=\"mt-4 bg-green-50 border border-green-200 rounded-lg p-4\">\n      <h3 className=\"font-bold text-lg text-green-800 flex items-center\">üìà Correlation Insight</h3>\n      <p className=\"text-green-700 mt-2\">{insightText}</p>\n    </div>\n  );\n};\n\nconst Tag = ({ label, type }: { label: string, type: 'sentiment' | 'label' | 'activity' }) => {\n  const colorClasses = {\n    sentiment: {\n      POSITIVE: 'bg-green-100 text-green-800',\n      NEGATIVE: 'bg-red-100 text-red-800',\n      NEUTRAL: 'bg-gray-100 text-gray-800',\n    },\n    label: {\n      Anxiety: 'bg-purple-100 text-purple-800',\n      Fatigue: 'bg-gray-100 text-gray-800',\n      Sadness: 'bg-blue-100 text-blue-800',\n      Work: 'bg-yellow-100 text-yellow-800',\n      Family: 'bg-pink-100 text-pink-800',\n      default: 'bg-indigo-100 text-indigo-800',\n    },\n    activity: 'bg-orange-100 text-orange-800 border border-orange-200',\n  };\n\n  let color;\n  if (type === 'sentiment') {\n    color = colorClasses.sentiment[label as keyof typeof colorClasses.sentiment] || colorClasses.label.default;\n  } else if (type === 'label') {\n    color = colorClasses.label[label as keyof typeof colorClasses.label] || colorClasses.label.default;\n  } else {\n    color = colorClasses.activity;\n  }\n\n  return (\n    <span className={`px-3 py-1 text-sm font-medium rounded-full ${color}`}>\n      {type === 'activity' && 'üèÉ‚Äç‚ôÇÔ∏è '}{label}\n    </span>\n  );\n};\n\n\n// --- Main Page Component ---\nexport default function HomePage() {\n  const [journalText, setJournalText] = useState('');\n  const [selectedActivities, setSelectedActivities] = useState<string[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [analysis, setAnalysis] = useState<AnalysisResult | null>(null);\n  const [error, setError] = useState('');\n  const [showBreathingExercise, setShowBreathingExercise] = useState(false);\n\n  const handleActivityChange = (activity: string) => {\n    setSelectedActivities(prev => \n      prev.includes(activity) \n        ? prev.filter(a => a !== activity) \n        : [...prev, activity]\n    );\n  };\n\n  const handleAnalyze = async () => {\n    if (!journalText.trim()) {\n      setError('Please write something in your journal first.');\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    setAnalysis(null);\n\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/analyze', {\n        text: journalText,\n        activities: selectedActivities,\n      });\n\n      if (response.data.error) {\n        throw new Error(response.data.error);\n      }\n      \n      setAnalysis(response.data);\n\n      // --- NEW: Save analysis to localStorage for Weekly Summary ---\n      const history = JSON.parse(localStorage.getItem('aura-history') || '[]');\n      const newEntry = {\n        date: new Date().toISOString(),\n        sentiment: response.data.sentiment,\n        labels: response.data.labels,\n        activities: response.data.activities,\n      };\n      history.push(newEntry);\n      localStorage.setItem('aura-history', JSON.stringify(history));\n      // --- End of new block ---\n\n    } catch (err) {\n      console.error(err);\n      setError('Sorry, we couldn\\'t analyze your entry. The server might be busy. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const getPrimaryEmotion = (): string | null => {\n    if (!analysis) return null;\n    const emotions = ['Anxiety', 'Fatigue', 'Sadness'];\n    return analysis.labels.find(label => emotions.includes(label)) || null;\n  };\n\n  return (\n    <>\n      {/* Conditionally render the exercise modal on top of everything */}\n      {showBreathingExercise && <BreathingExercise onClose={() => setShowBreathingExercise(false)} />}\n      \n      <main className=\"flex min-h-screen flex-col items-center p-4 sm:p-8 bg-gray-50 font-sans\">\n        <div className=\"w-full max-w-2xl\">\n          <header className=\"text-center mb-8\">\n            <h1 className=\"text-4xl sm:text-5xl font-bold text-gray-800\">Aura Journal</h1>\n            <p className=\"text-gray-600 mt-2\">Your private space to reflect and understand your feelings.</p>\n          </header>\n\n          {/* Journal Input Section */}\n          <div className=\"bg-white p-6 rounded-lg shadow-md\">\n            <textarea\n              value={journalText}\n              onChange={(e) => setJournalText(e.target.value)}\n              placeholder=\"How are you feeling today? Let it all out...\"\n              className=\"w-full h-40 p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-shadow duration-200\"\n              disabled={isLoading}\n            />\n\n            <div className=\"mt-4\">\n              <h3 className=\"text-md font-semibold text-gray-700 mb-2\">What did you do today? (Optional)</h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {ALL_ACTIVITIES.map(activity => (\n                  <button\n                    key={activity}\n                    onClick={() => handleActivityChange(activity)}\n                    className={`px-3 py-1.5 text-sm font-medium rounded-full border transition-colors ${\n                      selectedActivities.includes(activity)\n                        ? 'bg-blue-500 text-white border-blue-500'\n                        : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-100'\n                    }`}\n                  >\n                    {activity}\n                  </button>\n                ))}\n              </div>\n            </div>\n            \n            <button\n              onClick={handleAnalyze}\n              disabled={isLoading}\n              className=\"w-full mt-6 bg-blue-600 text-white font-bold py-3 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors duration-200\"\n            >\n              {isLoading ? 'Analyzing...' : 'Analyze My Feelings'}\n            </button>\n          </div>\n\n          {/* Goal Tracker Section */}\n          <GoalTracker />\n\n          {error && <p className=\"text-red-500 text-center mt-4\">{error}</p>}\n          \n          {/* Analysis Results Section */}\n          {analysis && (\n            <div className=\"mt-8 bg-white p-6 rounded-lg shadow-md animate-fade-in\">\n              <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Your Analysis</h2>\n              <div className=\"flex flex-wrap gap-2\">\n                <Tag label={analysis.sentiment} type=\"sentiment\"/>\n                {analysis.labels.map(label => <Tag key={label} label={label} type=\"label\" />)}\n                {analysis.activities.map(activity => <Tag key={activity} label={activity} type=\"activity\" />)}\n              </div>\n              <InsightCard primaryEmotion={getPrimaryEmotion()} />\n              <CorrelationCard analysis={analysis} />\n              \n              {/* Guided Exercise Button */}\n              {analysis.labels.includes(\"Anxiety\") && (\n                <button\n                  onClick={() => setShowBreathingExercise(true)}\n                  className=\"w-full mt-4 bg-purple-600 text-white font-bold py-2 px-4 rounded-md hover:bg-purple-700 transition-colors\"\n                >\n                  Try a Guided Breathing Exercise\n                </button>\n              )}\n            </div>\n          )}\n        </div>\n      </main>\n    </>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}