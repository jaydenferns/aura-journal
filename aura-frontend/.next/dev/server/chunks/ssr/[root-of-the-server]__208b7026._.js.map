{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jayde/OneDrive/Desktop/aura%20projects/aura-frontend/app/BreathingExercise.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\n// Define the props the component will accept\r\ninterface BreathingExerciseProps {\r\n  onClose: () => void;\r\n}\r\n\r\n// Define the different phases of the exercise\r\nconst phases = [\r\n  { name: \"Inhale\", duration: 4 },\r\n  { name: \"Hold\", duration: 7 },\r\n  { name: \"Exhale\", duration: 8 },\r\n];\r\nconst totalCycles = 4; // The exercise will run 4 full times\r\n\r\nexport default function BreathingExercise({ onClose }: BreathingExerciseProps) {\r\n  // --- State Variables ---\r\n  // cycleIndex tracks which phase we're in (e.g., 0 = Inhale, 1 = Hold, 2 = Exhale)\r\n  const [cycleIndex, setCycleIndex] = useState(-1); // Start at -1 for \"Get Ready\"\r\n  // instruction holds the text to display (e.g., \"Inhale\")\r\n  const [instruction, setInstruction] = useState(\"Get Ready\");\r\n  // countdown holds the number of seconds remaining for the current phase\r\n  const [countdown, setCountdown] = useState(3); // Start with a 3-second \"Get Ready\" timer\r\n\r\n  useEffect(() => {\r\n    // This interval runs every 1 second to update the countdown\r\n    const interval = setInterval(() => {\r\n      setCountdown(c => c - 1); // Decrement the countdown by 1\r\n    }, 1000);\r\n\r\n    // This checks if the countdown for the current phase has finished\r\n    if (countdown === 0) {\r\n      const nextCycleIndex = cycleIndex + 1;\r\n\r\n      // Check if we have completed all 12 phases (3 phases * 4 cycles)\r\n      if (nextCycleIndex >= phases.length * totalCycles) {\r\n        clearInterval(interval); // Stop the timer\r\n        onClose(); // Close the modal\r\n        return;\r\n      }\r\n\r\n      // Get the next phase from our `phases` array\r\n      // (e.g., cycle 3 % 3 = 0, so it loops back to \"Inhale\")\r\n      const nextPhase = phases[nextCycleIndex % phases.length];\r\n\r\n      setCycleIndex(nextCycleIndex); // Move to the next cycle\r\n      setInstruction(nextPhase.name); // Set the new instruction\r\n      setCountdown(nextPhase.duration); // Set the countdown for the new phase\r\n    }\r\n\r\n    // This is a cleanup function. It stops the interval when the component is unmounted.\r\n    return () => clearInterval(interval);\r\n\r\n  }, [countdown, cycleIndex, onClose]); // This effect re-runs every time the countdown or cycle changes\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-blue-900 bg-opacity-90 flex flex-col items-center justify-center z-50 animate-fade-in\">\r\n      <div className=\"text-center\">\r\n        <div className=\"w-64 h-64 rounded-full border-4 border-white flex items-center justify-center\">\r\n          {/* Display both the instruction and the live countdown */}\r\n          <div>\r\n            <p className=\"text-white text-4xl font-bold\">{instruction}</p>\r\n            <p className=\"text-white text-8xl font-bold mt-2\">{countdown}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button \r\n        onClick={onClose} \r\n        className=\"absolute top-4 right-6 text-white text-3xl font-bold opacity-70 hover:opacity-100\"\r\n      >\r\n        &times;\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AASA,8CAA8C;AAC9C,MAAM,SAAS;IACb;QAAE,MAAM;QAAU,UAAU;IAAE;IAC9B;QAAE,MAAM;QAAQ,UAAU;IAAE;IAC5B;QAAE,MAAM;QAAU,UAAU;IAAE;CAC/B;AACD,MAAM,cAAc,GAAG,qCAAqC;AAE7C,SAAS,kBAAkB,EAAE,OAAO,EAA0B;IAC3E,0BAA0B;IAC1B,kFAAkF;IAClF,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAC,CAAC,IAAI,8BAA8B;IAChF,yDAAyD;IACzD,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAC;IAC/C,wEAAwE;IACxE,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC,IAAI,0CAA0C;IAEzF,IAAA,kNAAS,EAAC;QACR,4DAA4D;QAC5D,MAAM,WAAW,YAAY;YAC3B,aAAa,CAAA,IAAK,IAAI,IAAI,+BAA+B;QAC3D,GAAG;QAEH,kEAAkE;QAClE,IAAI,cAAc,GAAG;YACnB,MAAM,iBAAiB,aAAa;YAEpC,iEAAiE;YACjE,IAAI,kBAAkB,OAAO,MAAM,GAAG,aAAa;gBACjD,cAAc,WAAW,iBAAiB;gBAC1C,WAAW,kBAAkB;gBAC7B;YACF;YAEA,6CAA6C;YAC7C,wDAAwD;YACxD,MAAM,YAAY,MAAM,CAAC,iBAAiB,OAAO,MAAM,CAAC;YAExD,cAAc,iBAAiB,yBAAyB;YACxD,eAAe,UAAU,IAAI,GAAG,0BAA0B;YAC1D,aAAa,UAAU,QAAQ,GAAG,sCAAsC;QAC1E;QAEA,qFAAqF;QACrF,OAAO,IAAM,cAAc;IAE7B,GAAG;QAAC;QAAW;QAAY;KAAQ,GAAG,gEAAgE;IAEtG,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BAEb,cAAA,8OAAC;;0CACC,8OAAC;gCAAE,WAAU;0CAAiC;;;;;;0CAC9C,8OAAC;gCAAE,WAAU;0CAAsC;;;;;;;;;;;;;;;;;;;;;;0BAIzD,8OAAC;gBACC,SAAS;gBACT,WAAU;0BACX;;;;;;;;;;;;AAKP","debugId":null}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jayde/OneDrive/Desktop/aura%20projects/aura-frontend/app/GoalTracker.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\n// Define the structure for a habit\r\ninterface Habit {\r\n  id: string;\r\n  name: string;\r\n  target: number;\r\n  progress: number;\r\n  emoji: string;\r\n}\r\n\r\n// Initial state for our habits\r\nconst initialHabits: Habit[] = [\r\n  { id: 'exercise', name: 'Exercise', target: 3, progress: 0, emoji: '💪' },\r\n  { id: 'mindful', name: 'Mindful Minutes', target: 5, progress: 0, emoji: '🧘' },\r\n  { id: 'hydrate', name: 'Hydrate (8 glasses)', target: 7, progress: 0, emoji: '💧' },\r\n];\r\n\r\nexport default function GoalTracker() {\r\n  const [habits, setHabits] = useState<Habit[]>([]);\r\n\r\n  // On first load, get habits from localStorage or use initial state\r\n  useEffect(() => {\r\n    const savedHabits = localStorage.getItem('aura-habits');\r\n    if (savedHabits) {\r\n      setHabits(JSON.parse(savedHabits));\r\n    } else {\r\n      setHabits(initialHabits);\r\n    }\r\n  }, []);\r\n\r\n  // Whenever habits change, save them to localStorage\r\n  useEffect(() => {\r\n    if (habits.length > 0) {\r\n      localStorage.setItem('aura-habits', JSON.stringify(habits));\r\n    }\r\n  }, [habits]);\r\n\r\n  const handleProgress = (id: string) => {\r\n    setHabits(habits.map(habit => \r\n      (habit.id === id && habit.progress < habit.target)\r\n        ? { ...habit, progress: habit.progress + 1 }\r\n        : habit\r\n    ));\r\n  };\r\n  \r\n  const resetProgress = () => {\r\n    setHabits(initialHabits);\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-8 bg-white p-6 rounded-lg shadow-md\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800\">This Week's Goals</h2>\r\n        <button onClick={resetProgress} className=\"text-sm text-blue-500 hover:underline\">Reset</button>\r\n      </div>\r\n      <div className=\"space-y-4\">\r\n        {habits.map(habit => (\r\n          <div key={habit.id}>\r\n            <div className=\"flex justify-between items-center\">\r\n              <span className=\"font-semibold\">{habit.emoji} {habit.name}</span>\r\n              <span>{habit.progress} / {habit.target}</span>\r\n            </div>\r\n            <div className=\"w-full bg-gray-200 rounded-full h-2.5 mt-1\">\r\n              <div \r\n                className=\"bg-green-500 h-2.5 rounded-full\" \r\n                style={{ width: `${(habit.progress / habit.target) * 100}%` }}\r\n              ></div>\r\n            </div>\r\n            <button\r\n              onClick={() => handleProgress(habit.id)}\r\n              className=\"mt-2 text-sm bg-gray-200 px-3 py-1 rounded-full hover:bg-gray-300\"\r\n            >\r\n              Log +1\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAaA,+BAA+B;AAC/B,MAAM,gBAAyB;IAC7B;QAAE,IAAI;QAAY,MAAM;QAAY,QAAQ;QAAG,UAAU;QAAG,OAAO;IAAK;IACxE;QAAE,IAAI;QAAW,MAAM;QAAmB,QAAQ;QAAG,UAAU;QAAG,OAAO;IAAK;IAC9E;QAAE,IAAI;QAAW,MAAM;QAAuB,QAAQ;QAAG,UAAU;QAAG,OAAO;IAAK;CACnF;AAEc,SAAS;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iNAAQ,EAAU,EAAE;IAEhD,mEAAmE;IACnE,IAAA,kNAAS,EAAC;QACR,MAAM,cAAc,aAAa,OAAO,CAAC;QACzC,IAAI,aAAa;YACf,UAAU,KAAK,KAAK,CAAC;QACvB,OAAO;YACL,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,oDAAoD;IACpD,IAAA,kNAAS,EAAC;QACR,IAAI,OAAO,MAAM,GAAG,GAAG;YACrB,aAAa,OAAO,CAAC,eAAe,KAAK,SAAS,CAAC;QACrD;IACF,GAAG;QAAC;KAAO;IAEX,MAAM,iBAAiB,CAAC;QACtB,UAAU,OAAO,GAAG,CAAC,CAAA,QACnB,AAAC,MAAM,EAAE,KAAK,MAAM,MAAM,QAAQ,GAAG,MAAM,MAAM,GAC7C;gBAAE,GAAG,KAAK;gBAAE,UAAU,MAAM,QAAQ,GAAG;YAAE,IACzC;IAER;IAEA,MAAM,gBAAgB;QACpB,UAAU;IACZ;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,8OAAC;wBAAO,SAAS;wBAAe,WAAU;kCAAwC;;;;;;;;;;;;0BAEpF,8OAAC;gBAAI,WAAU;0BACZ,OAAO,GAAG,CAAC,CAAA,sBACV,8OAAC;;0CACC,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAK,WAAU;;4CAAiB,MAAM,KAAK;4CAAC;4CAAE,MAAM,IAAI;;;;;;;kDACzD,8OAAC;;4CAAM,MAAM,QAAQ;4CAAC;4CAAI,MAAM,MAAM;;;;;;;;;;;;;0CAExC,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCACC,WAAU;oCACV,OAAO;wCAAE,OAAO,GAAG,AAAC,MAAM,QAAQ,GAAG,MAAM,MAAM,GAAI,IAAI,CAAC,CAAC;oCAAC;;;;;;;;;;;0CAGhE,8OAAC;gCACC,SAAS,IAAM,eAAe,MAAM,EAAE;gCACtC,WAAU;0CACX;;;;;;;uBAdO,MAAM,EAAE;;;;;;;;;;;;;;;;AAsB5B","debugId":null}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jayde/OneDrive/Desktop/aura%20projects/aura-frontend/app/WeeklySummary.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\n\r\n// --- Type Definitions ---\r\ninterface HistoryEntry {\r\n  date: string;\r\n  sentiment: 'POSITIVE' | 'NEGATIVE' | 'NEUTRAL' | string;\r\n  labels: string[];\r\n  activities: string[];\r\n}\r\n\r\ninterface SummaryData {\r\n  totalEntries: number;\r\n  moods: { [key: string]: number };\r\n  topEmotion: string;\r\n  topActivity: string;\r\n}\r\n\r\n// --- Main Component ---\r\nexport default function WeeklySummary() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [summary, setSummary] = useState<SummaryData | null>(null);\r\n\r\n  const calculateSummary = () => {\r\n    const history: HistoryEntry[] = JSON.parse(localStorage.getItem('aura-history') || '[]');\r\n    const sevenDaysAgo = new Date();\r\n    sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\r\n\r\n    // 1. Filter entries for the last 7 days\r\n    const recentEntries = history.filter(entry => new Date(entry.date) > sevenDaysAgo);\r\n\r\n    if (recentEntries.length === 0) {\r\n      setSummary({ totalEntries: 0, moods: {}, topEmotion: 'N/A', topActivity: 'N/A' });\r\n      return;\r\n    }\r\n\r\n    // 2. Calculate statistics\r\n    const moodCounts: { [key: string]: number } = { POSITIVE: 0, NEGATIVE: 0, NEUTRAL: 0 };\r\n    const labelCounts: { [key: string]: number } = {};\r\n    const activityOnPositiveDays: { [key: string]: number } = {};\r\n\r\n    recentEntries.forEach(entry => {\r\n      // Count moods\r\n      if (moodCounts[entry.sentiment] !== undefined) {\r\n        moodCounts[entry.sentiment]++;\r\n      }\r\n      \r\n      // Count labels/emotions\r\n      entry.labels.forEach(label => {\r\n        labelCounts[label] = (labelCounts[label] || 0) + 1;\r\n      });\r\n\r\n      // Count activities on positive days\r\n      if (entry.sentiment === 'POSITIVE') {\r\n        entry.activities.forEach(activity => {\r\n          activityOnPositiveDays[activity] = (activityOnPositiveDays[activity] || 0) + 1;\r\n        });\r\n      }\r\n    });\r\n\r\n    // Find the most frequent label and activity\r\n    const getTopItem = (obj: { [key: string]: number }) => Object.keys(obj).reduce((a, b) => obj[a] > obj[b] ? a : b, 'N/A');\r\n    \r\n    setSummary({\r\n      totalEntries: recentEntries.length,\r\n      moods: moodCounts,\r\n      topEmotion: getTopItem(labelCounts),\r\n      topActivity: getTopItem(activityOnPositiveDays),\r\n    });\r\n  };\r\n\r\n  const handleShowSummary = () => {\r\n    calculateSummary();\r\n    setShowModal(true);\r\n  };\r\n\r\n  const MoodStat = ({ mood, count, total }: { mood: string, count: number, total: number }) => {\r\n    const percentage = total > 0 ? Math.round((count / total) * 100) : 0;\r\n    const colors: { [key: string]: string } = {\r\n      POSITIVE: 'bg-green-500',\r\n      NEGATIVE: 'bg-red-500',\r\n      NEUTRAL: 'bg-gray-500',\r\n    };\r\n    return (\r\n      <div>\r\n        <div className=\"flex justify-between font-semibold text-sm\">\r\n          <span>{mood}</span>\r\n          <span>{percentage}%</span>\r\n        </div>\r\n        <div className=\"w-full bg-gray-200 rounded-full h-2.5 mt-1\">\r\n          <div className={`${colors[mood]} h-2.5 rounded-full`} style={{ width: `${percentage}%` }}></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"my-8 text-center\">\r\n        <button\r\n          onClick={handleShowSummary}\r\n          className=\"bg-white px-6 py-3 rounded-lg shadow-md font-semibold text-gray-700 hover:bg-gray-100 transition-colors\"\r\n        >\r\n          Generate My Weekly Summary\r\n        </button>\r\n      </div>\r\n\r\n      {showModal && summary && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4 animate-fade-in\">\r\n          <div className=\"bg-white rounded-lg shadow-2xl p-6 w-full max-w-md\">\r\n            <div className=\"flex justify-between items-center border-b pb-3 mb-4\">\r\n              <h2 className=\"text-2xl font-bold text-gray-800\">Your Week in Review</h2>\r\n              <button onClick={() => setShowModal(false)} className=\"text-2xl font-bold text-gray-500 hover:text-gray-800\">&times;</button>\r\n            </div>\r\n            \r\n            {summary.totalEntries > 0 ? (\r\n              <div className=\"space-y-5\">\r\n                <div>\r\n                  <h3 className=\"font-bold text-lg mb-2\">Mood Breakdown</h3>\r\n                  <div className=\"space-y-3\">\r\n                    <MoodStat mood=\"POSITIVE\" count={summary.moods.POSITIVE} total={summary.totalEntries} />\r\n                    <MoodStat mood=\"NEGATIVE\" count={summary.moods.NEGATIVE} total={summary.totalEntries} />\r\n                    <MoodStat mood=\"NEUTRAL\" count={summary.moods.NEUTRAL} total={summary.totalEntries} />\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <h3 className=\"font-bold text-lg\">Key Insights</h3>\r\n                  <div className=\"mt-2 space-y-2\">\r\n                    <p><strong>Your most common feeling was:</strong> <span className=\"font-semibold text-purple-700\">{summary.topEmotion}</span></p>\r\n                    <p><strong>Activity most linked to positive days:</strong> <span className=\"font-semibold text-orange-700\">{summary.topActivity}</span></p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"bg-green-50 p-3 rounded-lg border border-green-200\">\r\n                  <p className=\"text-green-800\"><strong>Pro-Tip:</strong> To boost your mood next week, try focusing on activities like **{summary.topActivity}**!</p>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <p className=\"text-center text-gray-600 py-8\">Not enough data from the past week. Keep journaling to unlock your summary!</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 741, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jayde/OneDrive/Desktop/aura%20projects/aura-frontend/app/MoodChart.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n// Register the components Chart.js needs\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\n// Define the structure of our historical entries\r\ninterface HistoryEntry {\r\n  date: string;\r\n  sentiment: 'POSITIVE' | 'NEGATIVE' | 'NEUTRAL' | string;\r\n}\r\n\r\nexport default function MoodChart() {\r\n  const [chartData, setChartData] = useState<any>({ datasets: [] });\r\n  const [hasEnoughData, setHasEnoughData] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // We need to check for window to safely access localStorage\r\n    if (typeof window === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    const history: HistoryEntry[] = JSON.parse(localStorage.getItem('aura-history') || '[]');\r\n    const sevenDaysAgo = new Date();\r\n    sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\r\n\r\n    const recentEntries = history.filter(entry => new Date(entry.date) >= sevenDaysAgo);\r\n\r\n    if (recentEntries.length < 2) {\r\n      setHasEnoughData(false);\r\n      return; // Need at least 2 points to draw a line\r\n    } \r\n\r\n    setHasEnoughData(true);\r\n    // Format data for the chart\r\n    const labels = recentEntries.map(entry => new Date(entry.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }));\r\n    const dataPoints = recentEntries.map(entry => {\r\n      if (entry.sentiment === 'POSITIVE') return 1;\r\n      if (entry.sentiment === 'NEGATIVE') return -1;\r\n      return 0; // NEUTRAL\r\n    });\r\n\r\n    setChartData({\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Mood Trend',\r\n          data: dataPoints,\r\n          borderColor: 'rgb(59, 130, 246)',\r\n          backgroundColor: 'rgba(59, 130, 246, 0.5)',\r\n          tension: 0.1, // Makes the line slightly curved\r\n        },\r\n      ],\r\n    });\r\n  }, []);\r\n\r\n  if (!hasEnoughData) {\r\n    return (\r\n      <div className=\"my-8 bg-white p-6 rounded-lg shadow-md\">\r\n        <div className=\"text-center p-4 bg-gray-100 rounded-lg\">\r\n          <p className=\"text-gray-600\">Journal for a few more days to see your mood trend chart!</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: { display: false },\r\n      title: { display: true, text: 'Your Mood Over the Last 7 Days' },\r\n    },\r\n    scales: {\r\n      y: {\r\n        ticks: {\r\n          // This callback formats the Y-axis labels\r\n          callback: function(value: any) {\r\n            if (value === 1) return 'Positive';\r\n            if (value === -1) return 'Negative';\r\n            if (value === 0) return 'Neutral';\r\n            return null;\r\n          }\r\n        },\r\n        // Set explicit min/max to keep the labels consistent\r\n        min: -1.5,\r\n        max: 1.5,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-8 bg-white p-6 rounded-lg shadow-md\">\r\n      <Line options={chartOptions} data={chartData} />\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAeA,yCAAyC;AACzC,qKAAO,CAAC,QAAQ,CACd,6KAAa,EACb,2KAAW,EACX,4KAAY,EACZ,2KAAW,EACX,qKAAK,EACL,uKAAO,EACP,sKAAM;AASO,SAAS;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAM;QAAE,UAAU,EAAE;IAAC;IAC/D,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,iNAAQ,EAAC;IAEnD,IAAA,kNAAS,EAAC;QACR,4DAA4D;QAC5D,wCAAmC;YACjC;QACF;;;QAEA,MAAM;QACN,MAAM;QAGN,MAAM;QAQN,4BAA4B;QAC5B,MAAM;QACN,MAAM;IAkBR,GAAG,EAAE;IAEL,IAAI,CAAC,eAAe;QAClB,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAE,WAAU;8BAAgB;;;;;;;;;;;;;;;;IAIrC;IAEA,MAAM,eAAe;QACnB,YAAY;QACZ,SAAS;YACP,QAAQ;gBAAE,SAAS;YAAM;YACzB,OAAO;gBAAE,SAAS;gBAAM,MAAM;YAAiC;QACjE;QACA,QAAQ;YACN,GAAG;gBACD,OAAO;oBACL,0CAA0C;oBAC1C,UAAU,SAAS,KAAU;wBAC3B,IAAI,UAAU,GAAG,OAAO;wBACxB,IAAI,UAAU,CAAC,GAAG,OAAO;wBACzB,IAAI,UAAU,GAAG,OAAO;wBACxB,OAAO;oBACT;gBACF;gBACA,qDAAqD;gBACrD,KAAK,CAAC;gBACN,KAAK;YACP;QACF;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,8JAAI;YAAC,SAAS;YAAc,MAAM;;;;;;;;;;;AAGzC","debugId":null}},
    {"offset": {"line": 847, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jayde/OneDrive/Desktop/aura%20projects/aura-frontend/app/strategyEngine.ts"],"sourcesContent":["'use client';\r\n\r\n// --- Type Definitions ---\r\n// This defines the analysis object that the engine will receive\r\ninterface AnalysisResult {\r\n  labels: string[];\r\n  activities: string[];\r\n  sentiment: 'POSITIVE' | 'NEGATIVE' | 'NEUTRAL' | string;\r\n}\r\n\r\n// This defines the structure of a single strategy\r\nexport interface Strategy {\r\n  title: string;\r\n  text: string;\r\n  emoji: string;\r\n  requiredTags: string[];\r\n}\r\n\r\n// Our library of coping strategies.\r\n// More specific strategies (with more required tags) will be prioritized.\r\nconst strategyLibrary: Strategy[] = [\r\n  {\r\n    title: \"Feeling Anxious about Work?\",\r\n    text: \"Try the 'Urgent-Important Matrix' to organize your tasks. Focusing on what's truly important can reduce feelings of being overwhelmed.\",\r\n    emoji: \"📋\",\r\n    requiredTags: [\"Anxiety\", \"Work\"],\r\n  },\r\n  {\r\n    title: \"Feeling Down about Relationships?\",\r\n    text: \"Consider writing a short, positive message to a friend or family member. Expressing gratitude can strengthen bonds and lift your spirits.\",\r\n    emoji: \"💌\",\r\n    requiredTags: [\"Sadness\", \"Relationships\"],\r\n  },\r\n  {\r\n    title: \"Feeling Fatigued?\",\r\n    text: \"Your energy seems low. A short, 10-minute walk can boost circulation and mental clarity more effectively than staying seated.\",\r\n    emoji: \"🚶‍♀️\",\r\n    requiredTags: [\"Fatigue\"],\r\n  },\r\n  {\r\n    title: \"Feeling Anxious?\",\r\n    text: \"When you feel overwhelmed, try the 4-7-8 breathing technique. Inhale for 4s, hold for 7s, and exhale for 8s to calm your nervous system.\",\r\n    emoji: \"🌬️\",\r\n    requiredTags: [\"Anxiety\"],\r\n  },\r\n  {\r\n    title: \"Feeling Sad?\",\r\n    text: \"It's okay to feel this way. Try writing down three small things you are grateful for today. This practice can gently shift your perspective.\",\r\n    emoji: \"❤️\",\r\n    requiredTags: [\"Sadness\"],\r\n  },\r\n];\r\n\r\n// The \"engine\" function that finds the best strategy\r\nexport function getPersonalizedStrategy(analysis: AnalysisResult): Strategy {\r\n  let bestMatch: Strategy | null = null;\r\n  let highestScore = 0;\r\n\r\n  // Combine the AI labels and user-logged activities into one list\r\n  const allUserTags = [...analysis.labels, ...analysis.activities];\r\n\r\n  // Loop through every strategy in our library\r\n  for (const strategy of strategyLibrary) {\r\n    // Calculate how many of the required tags the user has\r\n    const score = strategy.requiredTags.reduce((acc, tag) => {\r\n      // If the user's tags include this required tag, add 1 to the score\r\n      return allUserTags.includes(tag) ? acc + 1 : acc;\r\n    }, 0);\r\n\r\n    // If this strategy has a higher score (is a better match) than the\r\n    // current best, replace it. This prioritizes more specific advice.\r\n    if (score > highestScore) {\r\n      highestScore = score;\r\n      bestMatch = strategy;\r\n    }\r\n  }\r\n\r\n  // If no specific strategy was found (score 0), return a default one\r\n  return bestMatch || {\r\n    title: \"Your Daily Insight ✨\",\r\n    text: \"Reflecting on your feelings is a powerful step. Notice the patterns in your thoughts and activities.\",\r\n    emoji: \"🧠\",\r\n    requiredTags: [],\r\n  };\r\n}"],"names":[],"mappings":";;;;AAAA;AAkBA,oCAAoC;AACpC,0EAA0E;AAC1E,MAAM,kBAA8B;IAClC;QACE,OAAO;QACP,MAAM;QACN,OAAO;QACP,cAAc;YAAC;YAAW;SAAO;IACnC;IACA;QACE,OAAO;QACP,MAAM;QACN,OAAO;QACP,cAAc;YAAC;YAAW;SAAgB;IAC5C;IACA;QACE,OAAO;QACP,MAAM;QACN,OAAO;QACP,cAAc;YAAC;SAAU;IAC3B;IACA;QACE,OAAO;QACP,MAAM;QACN,OAAO;QACP,cAAc;YAAC;SAAU;IAC3B;IACA;QACE,OAAO;QACP,MAAM;QACN,OAAO;QACP,cAAc;YAAC;SAAU;IAC3B;CACD;AAGM,SAAS,wBAAwB,QAAwB;IAC9D,IAAI,YAA6B;IACjC,IAAI,eAAe;IAEnB,iEAAiE;IACjE,MAAM,cAAc;WAAI,SAAS,MAAM;WAAK,SAAS,UAAU;KAAC;IAEhE,6CAA6C;IAC7C,KAAK,MAAM,YAAY,gBAAiB;QACtC,uDAAuD;QACvD,MAAM,QAAQ,SAAS,YAAY,CAAC,MAAM,CAAC,CAAC,KAAK;YAC/C,mEAAmE;YACnE,OAAO,YAAY,QAAQ,CAAC,OAAO,MAAM,IAAI;QAC/C,GAAG;QAEH,mEAAmE;QACnE,mEAAmE;QACnE,IAAI,QAAQ,cAAc;YACxB,eAAe;YACf,YAAY;QACd;IACF;IAEA,oEAAoE;IACpE,OAAO,aAAa;QAClB,OAAO;QACP,MAAM;QACN,OAAO;QACP,cAAc,EAAE;IAClB;AACF","debugId":null}},
    {"offset": {"line": 932, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jayde/OneDrive/Desktop/aura%20projects/aura-frontend/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport BreathingExercise from './BreathingExercise'; // Assumes BreathingExercise.tsx is in the same folder\nimport GoalTracker from './GoalTracker'; // Assumes GoalTracker.tsx is in the same folder\nimport WeeklySummary from './WeeklySummary';\nimport MoodChart from './MoodChart'; // <-- Import the new chart component\nimport { getPersonalizedStrategy } from './strategyEngine'; // <-- Import the new strategy engine\n\n// --- Constants ---\nconst ALL_ACTIVITIES = [\"Exercise\", \"Social\", \"Work\", \"Hobby\", \"Rest\", \"Nutrition\"];\n\n// --- Type Definitions ---\ntype AnalysisResult = {\n  sentiment: 'POSITIVE' | 'NEGATIVE' | 'NEUTRAL' | string;\n  labels: string[];\n  activities: string[];\n};\n\n// --- Helper Components ---\n\n// NEW: Updated InsightCard using the strategy engine\nconst InsightCard = ({ analysis }: { analysis: AnalysisResult }) => {\n  // Use the imported strategy engine to get the best advice\n  const strategy = getPersonalizedStrategy(analysis);\n\n  return (\n    <div className=\"mt-6 bg-blue-50 border border-blue-200 rounded-lg p-4\">\n      <h3 className=\"font-bold text-lg text-blue-800 flex items-center\">\n        {strategy.emoji} {strategy.title}\n      </h3>\n      <p className=\"text-blue-700 mt-2\">{strategy.text}</p>\n    </div>\n  );\n};\n\nconst CorrelationCard = ({ analysis }: { analysis: AnalysisResult }) => {\n  if (!analysis.activities || analysis.activities.length === 0) {\n    return null;\n  }\n  \n  let insightText = null;\n  // Simple correlation logic\n  if (analysis.sentiment === 'POSITIVE' && analysis.activities.includes('Exercise')) {\n    insightText = \"Great job on exercising! It seems to have a positive impact on your mood.\";\n  } else if (analysis.sentiment === 'POSITIVE' && analysis.activities.includes('Social')) {\n    insightText = \"Connecting with others is powerful. It looks like it boosted your spirits today!\";\n  } else if (analysis.labels.includes('Fatigue') && analysis.activities.includes('Work')) {\n    insightText = \"We noticed you logged 'Work' and are feeling fatigued. Remember to take regular breaks to recharge.\";\n  }\n\n  if (!insightText) return null; // Don't show the card if no specific insight is found\n\n  return (\n    <div className=\"mt-4 bg-green-50 border border-green-200 rounded-lg p-4\">\n      <h3 className=\"font-bold text-lg text-green-800 flex items-center\">📈 Correlation Insight</h3>\n      <p className=\"text-green-700 mt-2\">{insightText}</p>\n    </div>\n  );\n};\n\n// Tag component to display sentiments, labels, and activities\nconst Tag = ({ label, type }: { label: string, type: 'sentiment' | 'label' | 'activity' }) => {\n  // Color mapping for different tag types\n  const colorClasses = {\n    sentiment: {\n      POSITIVE: 'bg-green-100 text-green-800',\n      NEGATIVE: 'bg-red-100 text-red-800',\n      NEUTRAL: 'bg-gray-100 text-gray-800',\n    },\n    label: {\n      Anxiety: 'bg-purple-100 text-purple-800',\n      Fatigue: 'bg-gray-100 text-gray-800',\n      Sadness: 'bg-blue-100 text-blue-800',\n      Work: 'bg-yellow-100 text-yellow-800',\n      Family: 'bg-pink-100 text-pink-800',\n      default: 'bg-indigo-100 text-indigo-800',\n    },\n    activity: 'bg-orange-100 text-orange-800 border border-orange-200',\n  };\n\n  let color;\n  if (type === 'sentiment') {\n    color = colorClasses.sentiment[label as keyof typeof colorClasses.sentiment] || colorClasses.label.default;\n  } else if (type === 'label') {\n    color = colorClasses.label[label as keyof typeof colorClasses.label] || colorClasses.label.default;\n  } else {\n    color = colorClasses.activity;\n  }\n\n  return (\n    <span className={`px-3 py-1 text-sm font-medium rounded-full ${color}`}>\n      {type === 'activity' && '🏃‍♂️ '}{label}\n    </span>\n  );\n};\n\n\n// --- Main Page Component ---\nexport default function HomePage() {\n  // --- State Variables ---\n  const [journalText, setJournalText] = useState('');\n  const [selectedActivities, setSelectedActivities] = useState<string[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [analysis, setAnalysis] = useState<AnalysisResult | null>(null);\n  const [error, setError] = useState('');\n  const [showBreathingExercise, setShowBreathingExercise] = useState(false);\n\n  // --- Handlers ---\n  \n  // Toggles activities in the state\n  const handleActivityChange = (activity: string) => {\n    setSelectedActivities(prev => \n      prev.includes(activity) \n        ? prev.filter(a => a !== activity) // Remove activity\n        : [...prev, activity] // Add activity\n    );\n  };\n\n  // Handles the main \"Analyze\" button click\n  const handleAnalyze = async () => {\n    if (!journalText.trim()) {\n      setError('Please write something in your journal first.');\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    setAnalysis(null);\n\n    try {\n      // Call the backend API\n      const response = await axios.post('http://127.0.0.1:8000/analyze', {\n        text: journalText,\n        activities: selectedActivities,\n      });\n\n      if (response.data.error) {\n        throw new Error(response.data.error);\n      }\n      \n      setAnalysis(response.data); // Save the analysis results to state\n\n      // --- Save analysis to localStorage for charts and summary ---\n      const history = JSON.parse(localStorage.getItem('aura-history') || '[]');\n      const newEntry = {\n        date: new Date().toISOString(),\n        sentiment: response.data.sentiment,\n        labels: response.data.labels,\n        activities: response.data.activities,\n      };\n      history.push(newEntry);\n      localStorage.setItem('aura-history', JSON.stringify(history));\n      // --- End of save block ---\n\n    } catch (err) {\n      console.error(err);\n      setError('Sorry, we couldn\\'t analyze your entry. The server might be busy. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  // Helper function to check for a primary emotion\n  const getPrimaryEmotion = (): string | null => {\n    if (!analysis) return null;\n    const emotions = ['Anxiety', 'Fatigue', 'Sadness'];\n    return analysis.labels.find(label => emotions.includes(label)) || null;\n  };\n\n  // --- Render JSX ---\n  return (\n    <>\n      {/* Conditionally render the exercise modal on top of everything */}\n      {showBreathingExercise && <BreathingExercise onClose={() => setShowBreathingExercise(false)} />}\n      \n      <main className=\"flex min-h-screen flex-col items-center p-4 sm:p-8 bg-gray-50 font-sans\">\n        <div className=\"w-full max-w-2xl\">\n          <header className=\"text-center mb-8\">\n            <h1 className=\"text-4xl sm:text-5xl font-bold text-gray-800\">Aura Journal</h1>\n            <p className=\"text-gray-600 mt-2\">Your private space to reflect and understand your feelings.</p>\n          </header>\n\n          {/* Journal Input Section */}\n          <div className=\"bg-white p-6 rounded-lg shadow-md\">\n            <textarea\n              value={journalText}\n              onChange={(e) => setJournalText(e.target.value)}\n              placeholder=\"How are you feeling today? Let it all out...\"\n              className=\"w-full h-40 p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-shadow duration-200\"\n              disabled={isLoading}\n            />\n\n            <div className=\"mt-4\">\n              <h3 className=\"text-md font-semibold text-gray-700 mb-2\">What did you do today? (Optional)</h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {ALL_ACTIVITIES.map(activity => (\n                  <button\n                    key={activity}\n                    onClick={() => handleActivityChange(activity)}\n                    className={`px-3 py-1.5 text-sm font-medium rounded-full border transition-colors ${\n                      selectedActivities.includes(activity)\n                        ? 'bg-blue-500 text-white border-blue-500' // Selected state\n                        : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-100' // Default state\n                    }`}\n                  >\n                    {activity}\n                  </button>\n                ))}\n              </div>\n            </div>\n            \n            <button\n              onClick={handleAnalyze}\n              disabled={isLoading}\n              className=\"w-full mt-6 bg-blue-600 text-white font-bold py-3 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors duration-200\"\n            >\n              {isLoading ? 'Analyzing...' : 'Analyze My Feelings'}\n            </button>\n          </div>\n          \n          {/* Mood Chart Section */}\n          <MoodChart />\n\n          {/* Goal Tracker Section */}\n          <GoalTracker />\n\n          {/* Weekly Summary Section */}\n          <WeeklySummary />\n\n          {/* Error message display */}\n          {error && <p className=\"text-red-500 text-center mt-4\">{error}</p>}\n          \n          {/* Analysis Results Section (only shows after analysis) */}\n          {analysis && (\n            <div className=\"mt-8 bg-white p-6 rounded-lg shadow-md animate-fade-in\">\n              <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Your Analysis</h2>\n              <div className=\"flex flex-wrap gap-2\">\n                <Tag label={analysis.sentiment} type=\"sentiment\"/>\n                {analysis.labels.map(label => <Tag key={label} label={label} type=\"label\" />)}\n                {analysis.activities.map(activity => <Tag key={activity} label={activity} type=\"activity\" />)}\n              </div>\n              \n              {/* Updated InsightCard call - now uses strategy engine */}\n              <InsightCard analysis={analysis} />\n              <CorrelationCard analysis={analysis} />\n              \n              {/* Guided Exercise Button (still uses simple check) */}\n              {analysis.labels.includes(\"Anxiety\") && (\n                <button\n                  onClick={() => setShowBreathingExercise(true)}\n                  className=\"w-full mt-4 bg-purple-600 text-white font-bold py-2 px-4 rounded-md hover:bg-purple-700 transition-colors\"\n                >\n                  Try a Guided Breathing Exercise\n                </button>\n              )}\n            </div>\n          )}\n        </div>\n      </main>\n    </>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
}