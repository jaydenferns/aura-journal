{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jayde/OneDrive/Desktop/aura%20projects/aura-frontend/app/firebaseConfig.ts"],"sourcesContent":["import { initializeApp, getApp, getApps } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n// Do NOT import getAnalytics, as it requires the 'window' object\r\n\r\n// --- PASTE YOUR FIREBASE CONFIG KEYS HERE ---\r\n// You can get this from your Firebase project settings:\r\n// Project Overview > Project settings > General > \"Your apps\" > Web app\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBT0A7ywivkgVFtWLkbpESNZWw8l8TXa4U\",\r\n  authDomain: \"aura-journal-b37c4.firebaseapp.com\",\r\n  projectId: \"aura-journal-b37c4\",\r\n  storageBucket: \"aura-journal-b37c4.firebasestorage.app\",\r\n  messagingSenderId: \"999309219347\",\r\n  appId: \"1:999309219347:web:3424ddafdb70ca381591e6\"\r\n};\r\n\r\n\r\n\r\n\r\n// Initialize Firebase\r\n// This line checks if the app is already initialized,\r\n// which is important for Next.js to avoid errors during hot-reloading.\r\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\r\n\r\n// Get the database and auth instances\r\nconst db = getFirestore(app);\r\nconst auth = getAuth(app);\r\n\r\n// Export the instances so other files can use them\r\nexport { app, db, auth };\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":[],"mappings":";;;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;;;;AACA,iEAAiE;AAEjE,+CAA+C;AAC/C,wDAAwD;AACxD,wEAAwE;AACxE,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;AACT;AAKA,sBAAsB;AACtB,sDAAsD;AACtD,uEAAuE;AACvE,MAAM,MAAM,CAAC,IAAA,kMAAO,IAAG,MAAM,GAAG,IAAA,wMAAa,EAAC,kBAAkB,IAAA,iMAAM;AAEtE,sCAAsC;AACtC,MAAM,KAAK,IAAA,sMAAY,EAAC;AACxB,MAAM,OAAO,IAAA,4LAAO,EAAC","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jayde/OneDrive/Desktop/aura%20projects/aura-frontend/app/useAuth.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { auth } from './firebaseConfig'; // Imports 'auth' from Step 1\r\nimport { onAuthStateChanged, User } from 'firebase/auth';\r\n\r\n/**\r\n * A custom React hook to get the current authenticated user.\r\n * It provides the user object and a loading state.\r\n */\r\nexport default function useAuth() {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true); // Start as true\r\n\r\n  useEffect(() => {\r\n    // onAuthStateChanged is the official Firebase listener\r\n    // It runs once on load, and again any time the user logs in or out.\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      setUser(user); // Set the user (or null)\r\n      setLoading(false); // We're done loading\r\n    });\r\n\r\n    // This cleans up the listener when the component unmounts\r\n    // to prevent memory leaks.\r\n    return () => unsubscribe();\r\n  }, []); // The empty array [] means this effect only runs once on component mount.\r\n\r\n  // Return the user and loading state for other components to use\r\n  return { user, loading };\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAEA;AACA,uPAAyC,6BAA6B;AACtE;AAAA;;AAJA;;;;AAUe,SAAS;;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,6LAAQ,EAAc;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,6LAAQ,EAAC,OAAO,gBAAgB;IAE9D,IAAA,8LAAS;6BAAC;YACR,uDAAuD;YACvD,oEAAoE;YACpE,MAAM,cAAc,IAAA,uMAAkB,EAAC,oJAAI;iDAAE,CAAC;oBAC5C,QAAQ,OAAO,yBAAyB;oBACxC,WAAW,QAAQ,qBAAqB;gBAC1C;;YAEA,0DAA0D;YAC1D,2BAA2B;YAC3B;qCAAO,IAAM;;QACf;4BAAG,EAAE,GAAG,0EAA0E;IAElF,gEAAgE;IAChE,OAAO;QAAE;QAAM;IAAQ;AACzB;GAnBwB","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jayde/OneDrive/Desktop/aura%20projects/aura-frontend/app/LoginScreen.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { auth } from './firebaseConfig';\r\nimport { GoogleAuthProvider, signInWithPopup, signInAnonymously } from 'firebase/auth';\r\nimport { Sparkles } from 'lucide-react';\r\n\r\nexport default function LoginScreen() {\r\n  \r\n  // Triggers the Google Sign-in popup\r\n  const handleGoogleLogin = async () => {\r\n    const provider = new GoogleAuthProvider();\r\n    try {\r\n      await signInWithPopup(auth, provider);\r\n    } catch (error) {\r\n      console.error(\"Error during Google login:\", error);\r\n    }\r\n  };\r\n\r\n  // Signs the user in as a guest\r\n  const handleGuestLogin = async () => {\r\n    try {\r\n      await signInAnonymously(auth);\r\n    } catch (error) {\r\n      console.error(\"Error during guest login:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen flex-col items-center justify-center p-4 bg-slate-50 font-sans\">\r\n      <div className=\"w-full max-w-md text-center\">\r\n        \r\n        <header className=\"mb-10\">\r\n          <h1 className=\"text-6xl font-bold text-indigo-600\">Aura</h1>\r\n          <p className=\"text-xl text-slate-600 mt-2\">Your private space to reflect and grow.</p>\r\n        </header>\r\n\r\n        <div className=\"bg-white p-8 rounded-2xl shadow-lg\">\r\n          <h2 className=\"text-xl font-semibold text-slate-800 mb-6\">Welcome Back</h2>\r\n          \r\n          <button\r\n            onClick={handleGoogleLogin}\r\n            className=\"w-full bg-indigo-600 text-white font-bold py-3 px-4 rounded-lg hover:bg-indigo-700 transition-all duration-300 shadow-sm flex items-center justify-center\"\r\n          >\r\n            <Sparkles size={20} className=\"mr-2\" />\r\n            Sign in with Google\r\n          </button>\r\n          \r\n          <button\r\n            onClick={handleGuestLogin}\r\n            className=\"w-full bg-slate-200 text-slate-700 font-bold py-3 px-4 rounded-lg hover:bg-slate-300 transition-all duration-300 mt-4\"\r\n          >\r\n            Continue as Guest\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AACA;AAJA;;;;;AAMe,SAAS;IAEtB,oCAAoC;IACpC,MAAM,oBAAoB;QACxB,MAAM,WAAW,IAAI,uMAAkB;QACvC,IAAI;YACF,MAAM,IAAA,oMAAe,EAAC,oJAAI,EAAE;QAC9B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;QAC9C;IACF;IAEA,+BAA+B;IAC/B,MAAM,mBAAmB;QACvB,IAAI;YACF,MAAM,IAAA,sMAAiB,EAAC,oJAAI;QAC9B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C;IACF;IAEA,qBACE,iNAAC;QAAI,WAAU;kBACb,cAAA,iNAAC;YAAI,WAAU;;8BAEb,iNAAC;oBAAO,WAAU;;sCAChB,iNAAC;4BAAG,WAAU;sCAAqC;;;;;;sCACnD,iNAAC;4BAAE,WAAU;sCAA8B;;;;;;;;;;;;8BAG7C,iNAAC;oBAAI,WAAU;;sCACb,iNAAC;4BAAG,WAAU;sCAA4C;;;;;;sCAE1D,iNAAC;4BACC,SAAS;4BACT,WAAU;;8CAEV,iNAAC,6OAAQ;oCAAC,MAAM;oCAAI,WAAU;;;;;;gCAAS;;;;;;;sCAIzC,iNAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX;KAnDwB","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jayde/OneDrive/Desktop/aura%20projects/aura-frontend/app/strategyEngine.ts"],"sourcesContent":["'use client';\r\n\r\n// --- Type Definitions ---\r\n// This defines the analysis object that the engine will receive\r\ninterface AnalysisResult {\r\n  labels: string[];\r\n  activities: string[];\r\n  sentiment: 'POSITIVE' | 'NEGATIVE' | 'NEUTRAL' | string;\r\n}\r\n\r\n// This defines the structure of a single strategy\r\nexport interface Strategy {\r\n  title: string;\r\n  text: string;\r\n  emoji: string;\r\n  requiredTags: string[];\r\n}\r\n\r\n// Our library of coping strategies.\r\n// More specific strategies (with more required tags) will be prioritized.\r\nconst strategyLibrary: Strategy[] = [\r\n  {\r\n    title: \"Feeling Anxious about Work?\",\r\n    text: \"Try the 'Urgent-Important Matrix' to organize your tasks. Focusing on what's truly important can reduce feelings of being overwhelmed.\",\r\n    emoji: \"📋\",\r\n    requiredTags: [\"Anxiety\", \"Work\"],\r\n  },\r\n  {\r\n    title: \"Feeling Down about Relationships?\",\r\n    text: \"Consider writing a short, positive message to a friend or family member. Expressing gratitude can strengthen bonds and lift your spirits.\",\r\n    emoji: \"💌\",\r\n    requiredTags: [\"Sadness\", \"Relationships\"],\r\n  },\r\n  {\r\n    title: \"Feeling Fatigued?\",\r\n    text: \"Your energy seems low. A short, 10-minute walk can boost circulation and mental clarity more effectively than staying seated.\",\r\n    emoji: \"🚶‍♀️\",\r\n    requiredTags: [\"Fatigue\"],\r\n  },\r\n  {\r\n    title: \"Feeling Anxious?\",\r\n    text: \"When you feel overwhelmed, try the 4-7-8 breathing technique. Inhale for 4s, hold for 7s, and exhale for 8s to calm your nervous system.\",\r\n    emoji: \"🌬️\",\r\n    requiredTags: [\"Anxiety\"],\r\n  },\r\n  {\r\n    title: \"Feeling Sad?\",\r\n    text: \"It's okay to feel this way. Try writing down three small things you are grateful for today. This practice can gently shift your perspective.\",\r\n    emoji: \"❤️\",\r\n    requiredTags: [\"Sadness\"],\r\n  },\r\n];\r\n\r\n// The \"engine\" function that finds the best strategy\r\nexport function getPersonalizedStrategy(analysis: AnalysisResult): Strategy {\r\n  let bestMatch: Strategy | null = null;\r\n  let highestScore = 0;\r\n\r\n  // Combine the AI labels and user-logged activities into one list\r\n  const allUserTags = [...analysis.labels, ...analysis.activities];\r\n\r\n  // Loop through every strategy in our library\r\n  for (const strategy of strategyLibrary) {\r\n    // Calculate how many of the required tags the user has\r\n    const score = strategy.requiredTags.reduce((acc, tag) => {\r\n      // If the user's tags include this required tag, add 1 to the score\r\n      return allUserTags.includes(tag) ? acc + 1 : acc;\r\n    }, 0);\r\n\r\n    // If this strategy has a higher score (is a better match) than the\r\n    // current best, replace it. This prioritizes more specific advice.\r\n    if (score > highestScore) {\r\n      highestScore = score;\r\n      bestMatch = strategy;\r\n    }\r\n  }\r\n\r\n  // If no specific strategy was found (score 0), return a default one\r\n  return bestMatch || {\r\n    title: \"Your Daily Insight ✨\",\r\n    text: \"Reflecting on your feelings is a powerful step. Notice the patterns in your thoughts and activities.\",\r\n    emoji: \"🧠\",\r\n    requiredTags: [],\r\n  };\r\n}"],"names":[],"mappings":";;;;AAAA;AAkBA,oCAAoC;AACpC,0EAA0E;AAC1E,MAAM,kBAA8B;IAClC;QACE,OAAO;QACP,MAAM;QACN,OAAO;QACP,cAAc;YAAC;YAAW;SAAO;IACnC;IACA;QACE,OAAO;QACP,MAAM;QACN,OAAO;QACP,cAAc;YAAC;YAAW;SAAgB;IAC5C;IACA;QACE,OAAO;QACP,MAAM;QACN,OAAO;QACP,cAAc;YAAC;SAAU;IAC3B;IACA;QACE,OAAO;QACP,MAAM;QACN,OAAO;QACP,cAAc;YAAC;SAAU;IAC3B;IACA;QACE,OAAO;QACP,MAAM;QACN,OAAO;QACP,cAAc;YAAC;SAAU;IAC3B;CACD;AAGM,SAAS,wBAAwB,QAAwB;IAC9D,IAAI,YAA6B;IACjC,IAAI,eAAe;IAEnB,iEAAiE;IACjE,MAAM,cAAc;WAAI,SAAS,MAAM;WAAK,SAAS,UAAU;KAAC;IAEhE,6CAA6C;IAC7C,KAAK,MAAM,YAAY,gBAAiB;QACtC,uDAAuD;QACvD,MAAM,QAAQ,SAAS,YAAY,CAAC,MAAM,CAAC,CAAC,KAAK;YAC/C,mEAAmE;YACnE,OAAO,YAAY,QAAQ,CAAC,OAAO,MAAM,IAAI;QAC/C,GAAG;QAEH,mEAAmE;QACnE,mEAAmE;QACnE,IAAI,QAAQ,cAAc;YACxB,eAAe;YACf,YAAY;QACd;IACF;IAEA,oEAAoE;IACpE,OAAO,aAAa;QAClB,OAAO;QACP,MAAM;QACN,OAAO;QACP,cAAc,EAAE;IAClB;AACF","debugId":null}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jayde/OneDrive/Desktop/aura%20projects/aura-frontend/app/BreathingExercise.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\n// Define the props the component will accept\r\ninterface BreathingExerciseProps {\r\n  onClose: () => void;\r\n}\r\n\r\n// Define the different phases of the exercise\r\nconst phases = [\r\n  { name: \"Inhale\", duration: 4 },\r\n  { name: \"Hold\", duration: 7 },\r\n  { name: \"Exhale\", duration: 8 },\r\n];\r\nconst totalCycles = 4; // The exercise will run 4 full times\r\n\r\nexport default function BreathingExercise({ onClose }: BreathingExerciseProps) {\r\n  // --- State Variables ---\r\n  // cycleIndex tracks which phase we're in (e.g., 0 = Inhale, 1 = Hold, 2 = Exhale)\r\n  const [cycleIndex, setCycleIndex] = useState(-1); // Start at -1 for \"Get Ready\"\r\n  // instruction holds the text to display (e.g., \"Inhale\")\r\n  const [instruction, setInstruction] = useState(\"Get Ready\");\r\n  // countdown holds the number of seconds remaining for the current phase\r\n  const [countdown, setCountdown] = useState(3); // Start with a 3-second \"Get Ready\" timer\r\n\r\n  useEffect(() => {\r\n    // This interval runs every 1 second to update the countdown\r\n    const interval = setInterval(() => {\r\n      setCountdown(c => c - 1); // Decrement the countdown by 1\r\n    }, 1000);\r\n\r\n    // This checks if the countdown for the current phase has finished\r\n    if (countdown === 0) {\r\n      const nextCycleIndex = cycleIndex + 1;\r\n\r\n      // Check if we have completed all 12 phases (3 phases * 4 cycles)\r\n      if (nextCycleIndex >= phases.length * totalCycles) {\r\n        clearInterval(interval); // Stop the timer\r\n        onClose(); // Close the modal\r\n        return;\r\n      }\r\n\r\n      // Get the next phase from our `phases` array\r\n      // (e.g., cycle 3 % 3 = 0, so it loops back to \"Inhale\")\r\n      const nextPhase = phases[nextCycleIndex % phases.length];\r\n\r\n      setCycleIndex(nextCycleIndex); // Move to the next cycle\r\n      setInstruction(nextPhase.name); // Set the new instruction\r\n      setCountdown(nextPhase.duration); // Set the countdown for the new phase\r\n    }\r\n\r\n    // This is a cleanup function. It stops the interval when the component is unmounted.\r\n    return () => clearInterval(interval);\r\n\r\n  }, [countdown, cycleIndex, onClose]); // This effect re-runs every time the countdown or cycle changes\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-blue-900 bg-opacity-90 flex flex-col items-center justify-center z-50 animate-fade-in\">\r\n      <div className=\"text-center\">\r\n        <div className=\"w-64 h-64 rounded-full border-4 border-white flex items-center justify-center\">\r\n          {/* Display both the instruction and the live countdown */}\r\n          <div>\r\n            <p className=\"text-white text-4xl font-bold\">{instruction}</p>\r\n            <p className=\"text-white text-8xl font-bold mt-2\">{countdown}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button \r\n        onClick={onClose} \r\n        className=\"absolute top-4 right-6 text-white text-3xl font-bold opacity-70 hover:opacity-100\"\r\n      >\r\n        &times;\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AASA,8CAA8C;AAC9C,MAAM,SAAS;IACb;QAAE,MAAM;QAAU,UAAU;IAAE;IAC9B;QAAE,MAAM;QAAQ,UAAU;IAAE;IAC5B;QAAE,MAAM;QAAU,UAAU;IAAE;CAC/B;AACD,MAAM,cAAc,GAAG,qCAAqC;AAE7C,SAAS,kBAAkB,EAAE,OAAO,EAA0B;;IAC3E,0BAA0B;IAC1B,kFAAkF;IAClF,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,6LAAQ,EAAC,CAAC,IAAI,8BAA8B;IAChF,yDAAyD;IACzD,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,6LAAQ,EAAC;IAC/C,wEAAwE;IACxE,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,6LAAQ,EAAC,IAAI,0CAA0C;IAEzF,IAAA,8LAAS;uCAAC;YACR,4DAA4D;YAC5D,MAAM,WAAW;wDAAY;oBAC3B;gEAAa,CAAA,IAAK,IAAI;gEAAI,+BAA+B;gBAC3D;uDAAG;YAEH,kEAAkE;YAClE,IAAI,cAAc,GAAG;gBACnB,MAAM,iBAAiB,aAAa;gBAEpC,iEAAiE;gBACjE,IAAI,kBAAkB,OAAO,MAAM,GAAG,aAAa;oBACjD,cAAc,WAAW,iBAAiB;oBAC1C,WAAW,kBAAkB;oBAC7B;gBACF;gBAEA,6CAA6C;gBAC7C,wDAAwD;gBACxD,MAAM,YAAY,MAAM,CAAC,iBAAiB,OAAO,MAAM,CAAC;gBAExD,cAAc,iBAAiB,yBAAyB;gBACxD,eAAe,UAAU,IAAI,GAAG,0BAA0B;gBAC1D,aAAa,UAAU,QAAQ,GAAG,sCAAsC;YAC1E;YAEA,qFAAqF;YACrF;+CAAO,IAAM,cAAc;;QAE7B;sCAAG;QAAC;QAAW;QAAY;KAAQ,GAAG,gEAAgE;IAEtG,qBACE,iNAAC;QAAI,WAAU;;0BACb,iNAAC;gBAAI,WAAU;0BACb,cAAA,iNAAC;oBAAI,WAAU;8BAEb,cAAA,iNAAC;;0CACC,iNAAC;gCAAE,WAAU;0CAAiC;;;;;;0CAC9C,iNAAC;gCAAE,WAAU;0CAAsC;;;;;;;;;;;;;;;;;;;;;;0BAIzD,iNAAC;gBACC,SAAS;gBACT,WAAU;0BACX;;;;;;;;;;;;AAKP;GA3DwB;KAAA","debugId":null}},
    {"offset": {"line": 452, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jayde/OneDrive/Desktop/aura%20projects/aura-frontend/app/GoalTracker.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\n// Define the structure for a habit\r\ninterface Habit {\r\n  id: string;\r\n  name: string;\r\n  target: number;\r\n  progress: number;\r\n  emoji: string;\r\n}\r\n\r\n// Initial state for our habits\r\nconst initialHabits: Habit[] = [\r\n  { id: 'exercise', name: 'Exercise', target: 3, progress: 0, emoji: '💪' },\r\n  { id: 'mindful', name: 'Mindful Minutes', target: 5, progress: 0, emoji: '🧘' },\r\n  { id: 'hydrate', name: 'Hydrate (8 glasses)', target: 7, progress: 0, emoji: '💧' },\r\n];\r\n\r\nexport default function GoalTracker() {\r\n  const [habits, setHabits] = useState<Habit[]>([]);\r\n\r\n  // On first load, get habits from localStorage or use initial state\r\n  useEffect(() => {\r\n    const savedHabits = localStorage.getItem('aura-habits');\r\n    if (savedHabits) {\r\n      setHabits(JSON.parse(savedHabits));\r\n    } else {\r\n      setHabits(initialHabits);\r\n    }\r\n  }, []);\r\n\r\n  // Whenever habits change, save them to localStorage\r\n  useEffect(() => {\r\n    if (habits.length > 0) {\r\n      localStorage.setItem('aura-habits', JSON.stringify(habits));\r\n    }\r\n  }, [habits]);\r\n\r\n  const handleProgress = (id: string) => {\r\n    setHabits(habits.map(habit => \r\n      (habit.id === id && habit.progress < habit.target)\r\n        ? { ...habit, progress: habit.progress + 1 }\r\n        : habit\r\n    ));\r\n  };\r\n  \r\n  const resetProgress = () => {\r\n    setHabits(initialHabits);\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-8 bg-white p-6 rounded-lg shadow-md\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800\">This Week's Goals</h2>\r\n        <button onClick={resetProgress} className=\"text-sm text-blue-500 hover:underline\">Reset</button>\r\n      </div>\r\n      <div className=\"space-y-4\">\r\n        {habits.map(habit => (\r\n          <div key={habit.id}>\r\n            <div className=\"flex justify-between items-center\">\r\n              <span className=\"font-semibold\">{habit.emoji} {habit.name}</span>\r\n              <span>{habit.progress} / {habit.target}</span>\r\n            </div>\r\n            <div className=\"w-full bg-gray-200 rounded-full h-2.5 mt-1\">\r\n              <div \r\n                className=\"bg-green-500 h-2.5 rounded-full\" \r\n                style={{ width: `${(habit.progress / habit.target) * 100}%` }}\r\n              ></div>\r\n            </div>\r\n            <button\r\n              onClick={() => handleProgress(habit.id)}\r\n              className=\"mt-2 text-sm bg-gray-200 px-3 py-1 rounded-full hover:bg-gray-300\"\r\n            >\r\n              Log +1\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAaA,+BAA+B;AAC/B,MAAM,gBAAyB;IAC7B;QAAE,IAAI;QAAY,MAAM;QAAY,QAAQ;QAAG,UAAU;QAAG,OAAO;IAAK;IACxE;QAAE,IAAI;QAAW,MAAM;QAAmB,QAAQ;QAAG,UAAU;QAAG,OAAO;IAAK;IAC9E;QAAE,IAAI;QAAW,MAAM;QAAuB,QAAQ;QAAG,UAAU;QAAG,OAAO;IAAK;CACnF;AAEc,SAAS;;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,6LAAQ,EAAU,EAAE;IAEhD,mEAAmE;IACnE,IAAA,8LAAS;iCAAC;YACR,MAAM,cAAc,aAAa,OAAO,CAAC;YACzC,IAAI,aAAa;gBACf,UAAU,KAAK,KAAK,CAAC;YACvB,OAAO;gBACL,UAAU;YACZ;QACF;gCAAG,EAAE;IAEL,oDAAoD;IACpD,IAAA,8LAAS;iCAAC;YACR,IAAI,OAAO,MAAM,GAAG,GAAG;gBACrB,aAAa,OAAO,CAAC,eAAe,KAAK,SAAS,CAAC;YACrD;QACF;gCAAG;QAAC;KAAO;IAEX,MAAM,iBAAiB,CAAC;QACtB,UAAU,OAAO,GAAG,CAAC,CAAA,QACnB,AAAC,MAAM,EAAE,KAAK,MAAM,MAAM,QAAQ,GAAG,MAAM,MAAM,GAC7C;gBAAE,GAAG,KAAK;gBAAE,UAAU,MAAM,QAAQ,GAAG;YAAE,IACzC;IAER;IAEA,MAAM,gBAAgB;QACpB,UAAU;IACZ;IAEA,qBACE,iNAAC;QAAI,WAAU;;0BACb,iNAAC;gBAAI,WAAU;;kCACb,iNAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,iNAAC;wBAAO,SAAS;wBAAe,WAAU;kCAAwC;;;;;;;;;;;;0BAEpF,iNAAC;gBAAI,WAAU;0BACZ,OAAO,GAAG,CAAC,CAAA,sBACV,iNAAC;;0CACC,iNAAC;gCAAI,WAAU;;kDACb,iNAAC;wCAAK,WAAU;;4CAAiB,MAAM,KAAK;4CAAC;4CAAE,MAAM,IAAI;;;;;;;kDACzD,iNAAC;;4CAAM,MAAM,QAAQ;4CAAC;4CAAI,MAAM,MAAM;;;;;;;;;;;;;0CAExC,iNAAC;gCAAI,WAAU;0CACb,cAAA,iNAAC;oCACC,WAAU;oCACV,OAAO;wCAAE,OAAO,GAAG,AAAC,MAAM,QAAQ,GAAG,MAAM,MAAM,GAAI,IAAI,CAAC,CAAC;oCAAC;;;;;;;;;;;0CAGhE,iNAAC;gCACC,SAAS,IAAM,eAAe,MAAM,EAAE;gCACtC,WAAU;0CACX;;;;;;;uBAdO,MAAM,EAAE;;;;;;;;;;;;;;;;AAsB5B;GA9DwB;KAAA","debugId":null}},
    {"offset": {"line": 639, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jayde/OneDrive/Desktop/aura%20projects/aura-frontend/app/WeeklySummary.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { Timestamp } from 'firebase/firestore'; // <-- FIX 1: Import Timestamp\r\n\r\n// --- Type Definitions ---\r\nexport interface JournalEntry {\r\n  id: string;\r\n  date: Timestamp; // <-- FIX 2: The date is a Firestore Timestamp\r\n  sentiment: 'POSITIVE' | 'NEGATIVE' | 'NEUTRAL' | string;\r\n  labels: string[];\r\n  activities: string[];\r\n  [key: string]: any;\r\n}\r\n\r\ninterface SummaryData {\r\n  totalEntries: number;\r\n  moods: { [key: string]: number };\r\n  topEmotion: string;\r\n  topActivity: string;\r\n}\r\n\r\nexport default function WeeklySummary({ history }: { history: JournalEntry[] }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [summary, setSummary] = useState<SummaryData | null>(null);\r\n\r\n  // --- FIX 3: Run calculation inside useEffect, triggered by 'history' ---\r\n  useEffect(() => {\r\n    // This function now runs whenever the 'history' prop changes\r\n    const calculateSummary = () => {\r\n      if (typeof window === 'undefined') return;\r\n      \r\n      const sevenDaysAgo = new Date();\r\n      sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\r\n\r\n      // Filter for recent entries\r\n      const recentEntries = history.filter(entry => {\r\n        // --- FIX 4: Use .toDate() for date comparison ---\r\n        if (entry.date && typeof entry.date.toDate === 'function') {\r\n          return entry.date.toDate() > sevenDaysAgo;\r\n        }\r\n        return false;\r\n      });\r\n\r\n      if (recentEntries.length === 0) {\r\n        setSummary({ totalEntries: 0, moods: {}, topEmotion: 'N/A', topActivity: 'N/A' });\r\n        return;\r\n      }\r\n\r\n      // --- All the calculation logic is now safe ---\r\n      const moodCounts: { [key: string]: number } = { POSITIVE: 0, NEGATIVE: 0, NEUTRAL: 0 };\r\n      const labelCounts: { [key: string]: number } = {};\r\n      const activityOnPositiveDays: { [key: string]: number } = {};\r\n\r\n      recentEntries.forEach(entry => {\r\n        if (moodCounts[entry.sentiment] !== undefined) moodCounts[entry.sentiment]++;\r\n        entry.labels.forEach(label => { labelCounts[label] = (labelCounts[label] || 0) + 1; });\r\n        if (entry.sentiment === 'POSITIVE') {\r\n          entry.activities.forEach(activity => {\r\n            activityOnPositiveDays[activity] = (activityOnPositiveDays[activity] || 0) + 1;\r\n          });\r\n        }\r\n      });\r\n\r\n      const getTopItem = (obj: { [key: string]: number }) => {\r\n        const top = Object.keys(obj).reduce((a, b) => obj[a] > obj[b] ? a : b, '');\r\n        return top || 'N/A';\r\n      }\r\n      \r\n      setSummary({\r\n        totalEntries: recentEntries.length,\r\n        moods: moodCounts,\r\n        topEmotion: getTopItem(labelCounts),\r\n        topActivity: getTopItem(activityOnPositiveDays),\r\n      });\r\n    };\r\n\r\n    // Call the calculation\r\n    calculateSummary();\r\n\r\n  }, [history]); // <-- This dependency array ensures the code re-runs\r\n\r\n  \r\n  const handleShowSummary = () => {\r\n    // We no longer need to calculate here, just show the modal.\r\n    // The useEffect hook has already built the 'summary' object.\r\n    setShowModal(true);\r\n  };\r\n\r\n  const MoodStat = ({ mood, count, total }: { mood: string, count: number, total: number }) => {\r\n    const percentage = total > 0 ? Math.round((count / total) * 100) : 0;\r\n    const colors: { [key:string]: string } = {\r\n      POSITIVE: 'bg-green-500',\r\n      NEGATIVE: 'bg-rose-500',\r\n      NEUTRAL: 'bg-slate-500',\r\n    };\r\n    return (\r\n      <div>\r\n        <div className=\"flex justify-between font-semibold text-sm\">\r\n          <span>{mood.charAt(0).toUpperCase() + mood.slice(1).toLowerCase()}</span>\r\n          <span>{percentage}%</span>\r\n        </div>\r\n        <div className=\"w-full bg-slate-200 rounded-full h-2.5 mt-1\">\r\n          <div className={`${colors[mood] || 'bg-gray-400'} h-2.5 rounded-full`} style={{ width: `${percentage}%` }}></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-white p-6 rounded-2xl shadow-lg\">\r\n        <h2 className=\"text-2xl font-bold text-slate-800 mb-4\">Your Week</h2>\r\n        <p className=\"text-slate-600 mb-4\">Get a summary of your emotional trends and insights from the past 7 days.</p>\r\n        <button\r\n          onClick={handleShowSummary}\r\n          className=\"w-full bg-indigo-600 text-white font-bold py-3 px-4 rounded-xl hover:bg-indigo-700 transition-all\"\r\n        >\r\n          Generate My Weekly Summary\r\n        </button>\r\n      </div>\r\n\r\n      {showModal && summary && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4 animate-fade-in\">\r\n          <div className=\"bg-white rounded-lg shadow-2xl p-6 w-full max-w-md\">\r\n            <div className=\"flex justify-between items-center border-b pb-3 mb-4\">\r\n              <h2 className=\"text-2xl font-bold text-slate-800\">Your Week in Review</h2>\r\n              <button onClick={() => setShowModal(false)} className=\"text-2xl font-bold text-slate-500 hover:text-slate-800\">&times;</button>\r\n            </div>\r\n            \r\n            {summary.totalEntries > 0 ? (\r\n              <div className=\"space-y-5\">\r\n                <div>\r\n                  <h3 className=\"font-bold text-lg mb-2\">Mood Breakdown</h3>\r\n                  <div className=\"space-y-3\">\r\n                    <MoodStat mood=\"POSITIVE\" count={summary.moods.POSITIVE} total={summary.totalEntries} />\r\n                    <MoodStat mood=\"NEGATIVE\" count={summary.moods.NEGATIVE} total={summary.totalEntries} />\r\n                    <MoodStat mood=\"NEUTRAL\" count={summary.moods.NEUTRAL} total={summary.totalEntries} />\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <h3 className=\"font-bold text-lg\">Key Insights</h3>\r\n                  <div className=\"mt-2 space-y-2 text-slate-700\">\r\n                    <p><strong>Your most common feeling was:</strong> <span className=\"font-semibold text-indigo-700\">{summary.topEmotion}</span></p>\r\n                    <p><strong>Activity most linked to positive days:</strong> <span className=\"font-semibold text-green-700\">{summary.topActivity}</span></p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"bg-indigo-50 p-3 rounded-lg border border-indigo-200\">\r\n                  <p className=\"text-indigo-800\"><strong>Pro-Tip:</strong> To boost your mood next week, try focusing on activities like **{summary.topActivity}**!</p>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <p className=\"text-center text-slate-600 py-8\">Not enough data from the past week. Keep journaling to unlock your summary!</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1052, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jayde/OneDrive/Desktop/aura%20projects/aura-frontend/app/MoodChart.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Timestamp } from 'firebase/firestore'; // Import the Timestamp type\r\n\r\n// Register the components Chart.js needs\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\n// Define the structure of our historical entries\r\nexport interface JournalEntry {\r\n  id: string;\r\n  date: Timestamp; // <-- FIX 1: The date is a Firestore Timestamp object\r\n  sentiment: 'POSITIVE' | 'NEGATIVE' | 'NEUTRAL' | string;\r\n  [key: string]: any; \r\n}\r\n\r\nexport default function MoodChart({ history }: { history: JournalEntry[] }) {\r\n  const [chartData, setChartData] = useState<any>({ datasets: [] });\r\n  const [hasEnoughData, setHasEnoughData] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (typeof window === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    const sevenDaysAgo = new Date();\r\n    sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\r\n\r\n    // Filter for recent entries\r\n    const recentEntries = history.filter(entry => {\r\n      // --- FIX 2: Check if date exists and has the .toDate() method ---\r\n      if (entry.date && typeof entry.date.toDate === 'function') {\r\n        const entryDate = entry.date.toDate(); // This is the correct conversion!\r\n        return entryDate >= sevenDaysAgo;\r\n      }\r\n      return false; // Filter out any invalid entries\r\n    });\r\n\r\n    if (recentEntries.length < 2) {\r\n      setHasEnoughData(false);\r\n      return;\r\n    } \r\n\r\n    setHasEnoughData(true);\r\n    \r\n    // --- FIX 3: Use .toDate() for sorting ---\r\n    const sortedEntries = recentEntries.sort((a, b) => a.date.toDate().getTime() - b.date.toDate().getTime());\r\n\r\n    // --- FIX 4: Use .toDate() for chart labels ---\r\n    const labels = sortedEntries.map(entry => entry.date.toDate().toLocaleDateString('en-US', { month: 'short', day: 'numeric' }));\r\n    const dataPoints = sortedEntries.map(entry => {\r\n      if (entry.sentiment === 'POSITIVE') return 1;\r\n      if (entry.sentiment === 'NEGATIVE') return -1;\r\n      return 0; // NEUTRAL\r\n    });\r\n\r\n    setChartData({\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Mood Trend',\r\n          data: dataPoints,\r\n          borderColor: 'rgb(79, 70, 229)', \r\n          backgroundColor: 'rgba(79, 70, 229, 0.5)',\r\n          tension: 0.1, \r\n        },\r\n      ],\r\n    });\r\n  }, [history]); // This correctly re-runs when history changes\r\n\r\n  // This is the content to show when the chart is loading or has no data\r\n  if (!hasEnoughData) {\r\n    return (\r\n      <div className=\"bg-white p-6 rounded-2xl shadow-lg\">\r\n        <h2 className=\"text-2xl font-bold text-slate-800 mb-4\">Mood Analytics</h2>\r\n        <div className=\"text-center p-4 bg-slate-100 rounded-lg\">\r\n          <p className=\"text-slate-600\">Journal for a few more days to see your mood trend chart!</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Chart.js options\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: { display: false },\r\n      title: { display: true, text: 'Your Mood Over the Last 7 Days', font: { size: 16, weight: 'bold' } },\r\n    },\r\n    scales: {\r\n      y: {\r\n        ticks: {\r\n          callback: function(value: any) {\r\n            if (value === 1) return 'Positive';\r\n            if (value === -1) return 'Negative';\r\n            if (value === 0) return 'Neutral';\r\n            return null;\r\n          }\r\n        },\r\n        min: -1.5,\r\n        max: 1.5,\r\n      },\r\n      x: {\r\n        grid: {\r\n          display: false, \r\n        }\r\n      }\r\n    },\r\n  };\r\n\r\n  // This is the content when the chart *does* have data\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-2xl shadow-lg\">\r\n      <Line options={chartOptions} data={chartData} />\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;;;AAJA;;;;AAgBA,yCAAyC;AACzC,4LAAO,CAAC,QAAQ,CACd,oMAAa,EACb,kMAAW,EACX,mMAAY,EACZ,kMAAW,EACX,4LAAK,EACL,8LAAO,EACP,6LAAM;AAWO,SAAS,UAAU,EAAE,OAAO,EAA+B;;IACxE,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,6LAAQ,EAAM;QAAE,UAAU,EAAE;IAAC;IAC/D,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,6LAAQ,EAAC;IAEnD,IAAA,8LAAS;+BAAC;YACR;;YAIA,MAAM,eAAe,IAAI;YACzB,aAAa,OAAO,CAAC,aAAa,OAAO,KAAK;YAE9C,4BAA4B;YAC5B,MAAM,gBAAgB,QAAQ,MAAM;qDAAC,CAAA;oBACnC,mEAAmE;oBACnE,IAAI,MAAM,IAAI,IAAI,OAAO,MAAM,IAAI,CAAC,MAAM,KAAK,YAAY;wBACzD,MAAM,YAAY,MAAM,IAAI,CAAC,MAAM,IAAI,kCAAkC;wBACzE,OAAO,aAAa;oBACtB;oBACA,OAAO,OAAO,iCAAiC;gBACjD;;YAEA,IAAI,cAAc,MAAM,GAAG,GAAG;gBAC5B,iBAAiB;gBACjB;YACF;YAEA,iBAAiB;YAEjB,2CAA2C;YAC3C,MAAM,gBAAgB,cAAc,IAAI;qDAAC,CAAC,GAAG,IAAM,EAAE,IAAI,CAAC,MAAM,GAAG,OAAO,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,OAAO;;YAEtG,gDAAgD;YAChD,MAAM,SAAS,cAAc,GAAG;8CAAC,CAAA,QAAS,MAAM,IAAI,CAAC,MAAM,GAAG,kBAAkB,CAAC,SAAS;wBAAE,OAAO;wBAAS,KAAK;oBAAU;;YAC3H,MAAM,aAAa,cAAc,GAAG;kDAAC,CAAA;oBACnC,IAAI,MAAM,SAAS,KAAK,YAAY,OAAO;oBAC3C,IAAI,MAAM,SAAS,KAAK,YAAY,OAAO,CAAC;oBAC5C,OAAO,GAAG,UAAU;gBACtB;;YAEA,aAAa;gBACX;gBACA,UAAU;oBACR;wBACE,OAAO;wBACP,MAAM;wBACN,aAAa;wBACb,iBAAiB;wBACjB,SAAS;oBACX;iBACD;YACH;QACF;8BAAG;QAAC;KAAQ,GAAG,8CAA8C;IAE7D,uEAAuE;IACvE,IAAI,CAAC,eAAe;QAClB,qBACE,iNAAC;YAAI,WAAU;;8BACb,iNAAC;oBAAG,WAAU;8BAAyC;;;;;;8BACvD,iNAAC;oBAAI,WAAU;8BACb,cAAA,iNAAC;wBAAE,WAAU;kCAAiB;;;;;;;;;;;;;;;;;IAItC;IAEA,mBAAmB;IACnB,MAAM,eAAe;QACnB,YAAY;QACZ,SAAS;YACP,QAAQ;gBAAE,SAAS;YAAM;YACzB,OAAO;gBAAE,SAAS;gBAAM,MAAM;gBAAkC,MAAM;oBAAE,MAAM;oBAAI,QAAQ;gBAAO;YAAE;QACrG;QACA,QAAQ;YACN,GAAG;gBACD,OAAO;oBACL,UAAU,SAAS,KAAU;wBAC3B,IAAI,UAAU,GAAG,OAAO;wBACxB,IAAI,UAAU,CAAC,GAAG,OAAO;wBACzB,IAAI,UAAU,GAAG,OAAO;wBACxB,OAAO;oBACT;gBACF;gBACA,KAAK,CAAC;gBACN,KAAK;YACP;YACA,GAAG;gBACD,MAAM;oBACJ,SAAS;gBACX;YACF;QACF;IACF;IAEA,sDAAsD;IACtD,qBACE,iNAAC;QAAI,WAAU;kBACb,cAAA,iNAAC,qLAAI;YAAC,SAAS;YAAc,MAAM;;;;;;;;;;;AAGzC;GApGwB;KAAA","debugId":null}},
    {"offset": {"line": 1229, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jayde/OneDrive/Desktop/aura%20projects/aura-frontend/app/StreakTracker.tsx"],"sourcesContent":["'use client';\r\n\r\n// This component receives the current streak count as a prop and displays it.\r\ninterface StreakTrackerProps {\r\n  streak: number;\r\n}\r\n\r\nexport default function StreakTracker({ streak }: StreakTrackerProps) {\r\n  // We use `key={streak}` in page.tsx to force a re-render with a small animation\r\n  return (\r\n    <div className=\"flex items-center gap-1 animate-pop-in\">\r\n      <span className=\"text-2xl\" role=\"img\" aria-label=\"Streak flame\">🔥</span>\r\n      <span className=\"text-xl font-bold text-orange-500\">{streak}</span>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;;AAOe,SAAS,cAAc,EAAE,MAAM,EAAsB;IAClE,gFAAgF;IAChF,qBACE,iNAAC;QAAI,WAAU;;0BACb,iNAAC;gBAAK,WAAU;gBAAW,MAAK;gBAAM,cAAW;0BAAe;;;;;;0BAChE,iNAAC;gBAAK,WAAU;0BAAqC;;;;;;;;;;;;AAG3D;KARwB","debugId":null}}]
}